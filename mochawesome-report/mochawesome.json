{
  "stats": {
    "suites": 1,
    "tests": 2,
    "passes": 1,
    "pending": 0,
    "failures": 1,
    "start": "2017-12-15T20:44:43.903Z",
    "end": "2017-12-15T20:44:44.074Z",
    "duration": 171,
    "testsRegistered": 2,
    "passPercent": 50,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "danger",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "uuid": "fb34b215-ad1e-4d63-9ce8-4ac310041a35",
    "title": "",
    "fullFile": "",
    "file": "",
    "beforeHooks": [],
    "afterHooks": [],
    "tests": [],
    "suites": [
      {
        "uuid": "2eb56cd7-9554-45ac-9166-cc30beeeba5b",
        "title": "Bug test",
        "fullFile": "/Users/adamg/Sites/mochawesome-test/test.js",
        "file": "/test.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "request initialized",
            "fullTitle": "Bug test request initialized",
            "timedOut": false,
            "duration": 2,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "done => {\n        request.should.be.ok;\n        done();",
            "err": {},
            "isRoot": false,
            "uuid": "7bcf0b56-a57b-4260-9ce8-2059a6204216",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "can get /test page",
            "fullTitle": "Bug test can get /test page",
            "timedOut": false,
            "duration": 0,
            "state": "failed",
            "pass": false,
            "fail": true,
            "pending": false,
            "code": "done => {\n        var req = request.get('https://www.google.com');\n        req\n            .end((err, res) => {\n                if (err) {\n                    done(err);\n                    return;\n                }\n                res.ok.should.be.ok;\n                res.type.should.match(/application\\/json/);\n                res.body.NODE_ENV.should.be.oneOf(['development', 'production'])\n                should.exist(res.headers.date)\n                should.not.exist(res.headers.cookies);\n                done();\n            })",
            "err": {
              "message": "AssertionError: expected 'text/html' to match /application\\/json/",
              "estack": "AssertionError: expected 'text/html' to match /application\\/json/\n    at req.end (test.js:24:33)\n    at Request.callback (node_modules/superagent/lib/node/index.js:706:12)\n    at Stream.parser (node_modules/superagent/lib/node/index.js:906:18)\n    at Unzip.unzip.on (node_modules/superagent/lib/node/unzip.js:55:12)\n    at endReadableNT (_stream_readable.js:1056:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)"
            },
            "isRoot": false,
            "uuid": "ed4b5ebd-97aa-4f04-b9eb-18fc4fdef83d",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "7bcf0b56-a57b-4260-9ce8-2059a6204216"
        ],
        "failures": [
          "ed4b5ebd-97aa-4f04-b9eb-18fc4fdef83d"
        ],
        "pending": [],
        "skipped": [],
        "duration": null,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      }
    ],
    "passes": [],
    "failures": [],
    "pending": [],
    "skipped": [],
    "duration": 0,
    "root": true,
    "rootEmpty": true,
    "_timeout": 2000
  },
  "copyrightYear": 2017
}